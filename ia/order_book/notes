1. Order BC creates order → publishes OrderCreatedEvent
2. Market Engine receives event → sends AddOrderToBook command to Order Book BC
3. Order Book BC adds order to appropriate price level
4. If spread crosses → generates OrderMatchedEvent
5. Market Engine receives match event → sends CreateTransaction to Order BC
6. Order BC creates transaction → updates order states


1. User places order via UI
   ↓
2. Portfolio BC creates order request → Event
   ↓
3. Market Engine receives event → Sends CreateOrderCommand to Order BC
   ↓
4. Order BC creates order → PublishesOrderCreatedEvent
   ↓
5. Market Engine receives OrderCreatedEvent → Sends AddOrderToBookEvent to OrderBook BC
   ↓
6. OrderBook BC:
   a. Queries OrderRepository for fresh order (monolithic advantage)
   b. Adds order to in-memory order book
   c. Checks for matches
   d. Publishes updates to WebSocket for UI
   ↓
7. If match found → PublishesOrderMatchedEvent
   ↓
8. Market Engine → Creates transaction in Order BC
   ↓
9. Order BC updates orders → PublishesTransactionCreatedEvent
   ↓
10. OrderBook BC receives event:
    a. Re-queries updated orders from repository
    b. Updates order book with new quantities
    c. Publishes updates to WebSocket